# Define environment
dist: xenial # Ubuntu 16.04
language: bash
# these are not just env variables
env:
  - tf_version=0.13.5 tf_init_cli_options="-input=false" tf_validation_cli_options="" tf_plan_cli_options="-lock=false -input=false" tf_apply_cli_options="-auto-approve -input=false"

# Only build pushes to master branch
# branches:
#   only:
#     - master
# Install dependencies
before_install:
  - echo https://releases.hashicorp.com/terraform/$tf_version/terraform_$tf_version_linux_amd64.zip  https://releases.hashicorp.com/terraform/${tf_version}/terraform_${tf_version}_linux_amd64.zip  https://releases.hashicorp.com/terraform/"$tf_version"/terraform_"$tf_version"_linux_amd64.zip
  - wget https://releases.hashicorp.com/terraform/${tf_version}/terraform_${tf_version}_linux_amd64.zip
  - unzip terraform_${tf_version}_linux_amd64.zip
  - sudo mv terraform /usr/local/bin/
  - rm terraform_${tf_version}_linux_amd64.zip
  - pwd
  - ls -la
  - sed -i "s/# {{ SED_TOKEN }}/token: ${TF_TOKEN}/g"  main.tf
jobs:
  include:
    - stage: terraform plan
      # Only run terraform validate and plan state if within a pull request
      if: type IN (pull_request)
      script:
        - echo "Executing Terraform Plan on pull request code"
        - terraform validate
        - terraform init $tf_init_cli_options
        - terraform validate $tf_validation_cli_options
        - terraform plan $tf_plan_cli_options
    - stage: terraform apply
      # Only run terraform apply stage if outside of a pull request
      if: type IN (push) and branch != production
      script:
        - terraform workspace test
        - terraform validate
        - terraform init $tf_init_cli_options
        - terraform apply $tf_apply_cli_options 